diff --git a/node_modules/@aztec/aztec.js/dest/index.d.ts b/node_modules/@aztec/aztec.js/dest/index.d.ts
index 35a14ce..cf2a5b3 100644
--- a/node_modules/@aztec/aztec.js/dest/index.d.ts
+++ b/node_modules/@aztec/aztec.js/dest/index.d.ts
@@ -17,17 +17,110 @@
  *   import { EthAddress } from '@aztec/aztec.js/eth_address';
  * ```
  */
-export { WaitOpts, ContractFunctionInteraction, Contract, ContractBase, ContractMethod, SentTx, BatchCall, } from './contract/index.js';
-export { ContractDeployer, DeployMethod, DeploySentTx } from './contract_deployer/index.js';
-export { generatePublicKey, FieldLike, EthAddressLike, computeMessageSecretHash, CheatCodes, AztecAddressLike, isContractDeployed, EthCheatCodes, computeAuthWitMessageHash, } from './utils/index.js';
+export {
+  WaitOpts,
+  ContractFunctionInteraction,
+  Contract,
+  ContractBase,
+  ContractMethod,
+  SentTx,
+  BatchCall,
+} from './contract/index.js';
+export {
+  ContractDeployer,
+  DeployMethod,
+  DeploySentTx,
+} from './contract_deployer/index.js';
+export {
+  generatePublicKey,
+  FieldLike,
+  EthAddressLike,
+  computeMessageSecretHash,
+  CheatCodes,
+  AztecAddressLike,
+  isContractDeployed,
+  EthCheatCodes,
+  computeAuthWitMessageHash,
+} from './utils/index.js';
 export { createPXEClient } from './pxe_client.js';
-export { CompleteAddress, getSchnorrAccount, AccountContract, AccountManager, getUnsafeSchnorrAccount, EcdsaAccountContract, createAccounts, SchnorrAccountContract, SingleKeyAccountContract, createAccount, AuthWitnessProvider, BaseAccountContract, } from './account/index.js';
-export { waitForSandbox, getSandboxAccountsWallets, deployInitialSandboxAccounts } from './sandbox/index.js';
-export { AccountWalletWithPrivateKey, AccountWallet, Wallet, SignerlessWallet } from './wallet/index.js';
-export { AztecAddress, EthAddress, Fr, Fq, FunctionSelector, GlobalVariables, GrumpkinScalar, Point, getContractDeploymentInfo, } from '@aztec/circuits.js';
+export {
+  CompleteAddress,
+  getEcdsaAccount,
+  getSchnorrAccount,
+  AccountContract,
+  AccountManager,
+  getUnsafeSchnorrAccount,
+  EcdsaAccountContract,
+  createAccounts,
+  SchnorrAccountContract,
+  SingleKeyAccountContract,
+  createAccount,
+  AuthWitnessProvider,
+  BaseAccountContract,
+} from './account/index.js';
+export {
+  waitForSandbox,
+  getSandboxAccountsWallets,
+  deployInitialSandboxAccounts,
+} from './sandbox/index.js';
+export {
+  AccountWalletWithPrivateKey,
+  AccountWallet,
+  Wallet,
+  SignerlessWallet,
+} from './wallet/index.js';
+export {
+  AztecAddress,
+  EthAddress,
+  Fr,
+  Fq,
+  FunctionSelector,
+  GlobalVariables,
+  GrumpkinScalar,
+  Point,
+  getContractDeploymentInfo,
+} from '@aztec/circuits.js';
 export { Grumpkin, Schnorr } from '@aztec/circuits.js/barretenberg';
-export { AuthWitness, AztecNode, ContractData, DeployedContract, ExtendedContractData, ExtendedNote, FunctionCall, GrumpkinPrivateKey, INITIAL_L2_BLOCK_NUM, L2Actor, L2Block, L2BlockL2Logs, LogFilter, LogId, LogType, MerkleTreeId, NodeInfo, Note, PXE, PackedArguments, PartialAddress, PublicKey, SyncStatus, Tx, TxExecutionRequest, TxHash, TxReceipt, TxStatus, UnencryptedL2Log, createAztecNodeClient, emptyFunctionCall, merkleTreeIds, mockTx, } from '@aztec/types';
-export { ContractArtifact, FunctionArtifact, encodeArguments } from '@aztec/foundation/abi';
+export {
+  AuthWitness,
+  AztecNode,
+  ContractData,
+  DeployedContract,
+  ExtendedContractData,
+  ExtendedNote,
+  FunctionCall,
+  GrumpkinPrivateKey,
+  INITIAL_L2_BLOCK_NUM,
+  L2Actor,
+  L2Block,
+  L2BlockL2Logs,
+  LogFilter,
+  LogId,
+  LogType,
+  MerkleTreeId,
+  NodeInfo,
+  Note,
+  PXE,
+  PackedArguments,
+  PartialAddress,
+  PublicKey,
+  SyncStatus,
+  Tx,
+  TxExecutionRequest,
+  TxHash,
+  TxReceipt,
+  TxStatus,
+  UnencryptedL2Log,
+  createAztecNodeClient,
+  emptyFunctionCall,
+  merkleTreeIds,
+  mockTx,
+} from '@aztec/types';
+export {
+  ContractArtifact,
+  FunctionArtifact,
+  encodeArguments,
+} from '@aztec/foundation/abi';
 export { sha256, init } from '@aztec/foundation/crypto';
 export { DebugLogger, createDebugLogger, onLog } from '@aztec/foundation/log';
 export { retry, retryUntil } from '@aztec/foundation/retry';
@@ -37,6 +130,11 @@ export { fileURLToPath } from '@aztec/foundation/url';
 export { to2Fields, toBigInt } from '@aztec/foundation/serialize';
 export { toBigIntBE } from '@aztec/foundation/bigint-buffer';
 export { makeFetch } from '@aztec/foundation/json-rpc/client';
-export { DeployL1Contracts, L1ContractArtifactsForDeployment, deployL1Contract, deployL1Contracts, } from '@aztec/ethereum';
+export {
+  DeployL1Contracts,
+  L1ContractArtifactsForDeployment,
+  deployL1Contract,
+  deployL1Contracts,
+} from '@aztec/ethereum';
 export { FieldsOf } from '@aztec/foundation/types';
 //# sourceMappingURL=index.d.ts.map
diff --git a/node_modules/@aztec/aztec.js/dest/index.d.ts.map b/node_modules/@aztec/aztec.js/dest/index.d.ts.map
index df757ca..26026ce 100644
--- a/node_modules/@aztec/aztec.js/dest/index.d.ts.map
+++ b/node_modules/@aztec/aztec.js/dest/index.d.ts.map
@@ -1 +1,10 @@
-{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;GAkBG;AACH,OAAO,EACL,QAAQ,EACR,2BAA2B,EAC3B,QAAQ,EACR,YAAY,EACZ,cAAc,EACd,MAAM,EACN,SAAS,GACV,MAAM,qBAAqB,CAAC;AAE7B,OAAO,EAAE,gBAAgB,EAAE,YAAY,EAAE,YAAY,EAAE,MAAM,8BAA8B,CAAC;AAE5F,OAAO,EACL,iBAAiB,EACjB,SAAS,EACT,cAAc,EACd,wBAAwB,EACxB,UAAU,EACV,gBAAgB,EAChB,kBAAkB,EAClB,aAAa,EACb,yBAAyB,GAC1B,MAAM,kBAAkB,CAAC;AAE1B,OAAO,EAAE,eAAe,EAAE,MAAM,iBAAiB,CAAC;AAElD,OAAO,EACL,eAAe,EACf,iBAAiB,EACjB,eAAe,EACf,cAAc,EACd,uBAAuB,EACvB,oBAAoB,EACpB,cAAc,EACd,sBAAsB,EACtB,wBAAwB,EACxB,aAAa,EACb,mBAAmB,EACnB,mBAAmB,GACpB,MAAM,oBAAoB,CAAC;AAE5B,OAAO,EAAE,cAAc,EAAE,yBAAyB,EAAE,4BAA4B,EAAE,MAAM,oBAAoB,CAAC;AAE7G,OAAO,EAAE,2BAA2B,EAAE,aAAa,EAAE,MAAM,EAAE,gBAAgB,EAAE,MAAM,mBAAmB,CAAC;AAIzG,OAAO,EACL,YAAY,EACZ,UAAU,EACV,EAAE,EACF,EAAE,EACF,gBAAgB,EAChB,eAAe,EACf,cAAc,EACd,KAAK,EACL,yBAAyB,GAC1B,MAAM,oBAAoB,CAAC;AAE5B,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,iCAAiC,CAAC;AAEpE,OAAO,EACL,WAAW,EACX,SAAS,EACT,YAAY,EACZ,gBAAgB,EAChB,oBAAoB,EACpB,YAAY,EACZ,YAAY,EACZ,kBAAkB,EAClB,oBAAoB,EACpB,OAAO,EACP,OAAO,EACP,aAAa,EACb,SAAS,EACT,KAAK,EACL,OAAO,EACP,YAAY,EACZ,QAAQ,EACR,IAAI,EACJ,GAAG,EACH,eAAe,EACf,cAAc,EACd,SAAS,EACT,UAAU,EACV,EAAE,EACF,kBAAkB,EAClB,MAAM,EACN,SAAS,EACT,QAAQ,EACR,gBAAgB,EAChB,qBAAqB,EACrB,iBAAiB,EACjB,aAAa,EACb,MAAM,GACP,MAAM,cAAc,CAAC;AAKtB,OAAO,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,eAAe,EAAE,MAAM,uBAAuB,CAAC;AAC5F,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,0BAA0B,CAAC;AACxD,OAAO,EAAE,WAAW,EAAE,iBAAiB,EAAE,KAAK,EAAE,MAAM,uBAAuB,CAAC;AAC9E,OAAO,EAAE,KAAK,EAAE,UAAU,EAAE,MAAM,yBAAyB,CAAC;AAC5D,OAAO,EAAE,KAAK,EAAE,MAAM,yBAAyB,CAAC;AAChD,OAAO,EAAE,OAAO,EAAE,MAAM,yBAAyB,CAAC;AAClD,OAAO,EAAE,aAAa,EAAE,MAAM,uBAAuB,CAAC;AACtD,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,6BAA6B,CAAC;AAClE,OAAO,EAAE,UAAU,EAAE,MAAM,iCAAiC,CAAC;AAC7D,OAAO,EAAE,SAAS,EAAE,MAAM,mCAAmC,CAAC;AAE9D,OAAO,EACL,iBAAiB,EACjB,gCAAgC,EAChC,gBAAgB,EAChB,iBAAiB,GAClB,MAAM,iBAAiB,CAAC;AAEzB,OAAO,EAAE,QAAQ,EAAE,MAAM,yBAAyB,CAAC"}
\ No newline at end of file
+{
+    "version": 3,
+    "file": "index.d.ts",
+    "sourceRoot": "",
+    "sources": [
+        "../src/index.ts"
+    ],
+    "names": [],
+    "mappings": "AAAA;;;;;;;;;;;;;;;;;;GAkBG;AACH,OAAO,EACL,QAAQ,EACR,2BAA2B,EAC3B,QAAQ,EACR,YAAY,EACZ,cAAc,EACd,MAAM,EACN,SAAS,GACV,MAAM,qBAAqB,CAAC;AAE7B,OAAO,EAAE,gBAAgB,EAAE,YAAY,EAAE,YAAY,EAAE,MAAM,8BAA8B,CAAC;AAE5F,OAAO,EACL,iBAAiB,EACjB,SAAS,EACT,cAAc,EACd,wBAAwB,EACxB,UAAU,EACV,gBAAgB,EAChB,kBAAkB,EAClB,aAAa,EACb,yBAAyB,GAC1B,MAAM,kBAAkB,CAAC;AAE1B,OAAO,EAAE,eAAe,EAAE,MAAM,iBAAiB,CAAC;AAElD,OAAO,EACL,eAAe,EACf,iBAAiB,EACjB,eAAe,EACf,cAAc,EACd,uBAAuB,EACvB,oBAAoB,EACpB,cAAc,EACd,sBAAsB,EACtB,wBAAwB,EACxB,aAAa,EACb,mBAAmB,EACnB,mBAAmB,GACpB,MAAM,oBAAoB,CAAC;AAE5B,OAAO,EAAE,cAAc,EAAE,yBAAyB,EAAE,4BAA4B,EAAE,MAAM,oBAAoB,CAAC;AAE7G,OAAO,EAAE,2BAA2B,EAAE,aAAa,EAAE,MAAM,EAAE,gBAAgB,EAAE,MAAM,mBAAmB,CAAC;AAIzG,OAAO,EACL,YAAY,EACZ,UAAU,EACV,EAAE,EACF,EAAE,EACF,gBAAgB,EAChB,eAAe,EACf,cAAc,EACd,KAAK,EACL,yBAAyB,GAC1B,MAAM,oBAAoB,CAAC;AAE5B,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,iCAAiC,CAAC;AAEpE,OAAO,EACL,WAAW,EACX,SAAS,EACT,YAAY,EACZ,gBAAgB,EAChB,oBAAoB,EACpB,YAAY,EACZ,YAAY,EACZ,kBAAkB,EAClB,oBAAoB,EACpB,OAAO,EACP,OAAO,EACP,aAAa,EACb,SAAS,EACT,KAAK,EACL,OAAO,EACP,YAAY,EACZ,QAAQ,EACR,IAAI,EACJ,GAAG,EACH,eAAe,EACf,cAAc,EACd,SAAS,EACT,UAAU,EACV,EAAE,EACF,kBAAkB,EAClB,MAAM,EACN,SAAS,EACT,QAAQ,EACR,gBAAgB,EAChB,qBAAqB,EACrB,iBAAiB,EACjB,aAAa,EACb,MAAM,GACP,MAAM,cAAc,CAAC;AAKtB,OAAO,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,eAAe,EAAE,MAAM,uBAAuB,CAAC;AAC5F,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,0BAA0B,CAAC;AACxD,OAAO,EAAE,WAAW,EAAE,iBAAiB,EAAE,KAAK,EAAE,MAAM,uBAAuB,CAAC;AAC9E,OAAO,EAAE,KAAK,EAAE,UAAU,EAAE,MAAM,yBAAyB,CAAC;AAC5D,OAAO,EAAE,KAAK,EAAE,MAAM,yBAAyB,CAAC;AAChD,OAAO,EAAE,OAAO,EAAE,MAAM,yBAAyB,CAAC;AAClD,OAAO,EAAE,aAAa,EAAE,MAAM,uBAAuB,CAAC;AACtD,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,6BAA6B,CAAC;AAClE,OAAO,EAAE,UAAU,EAAE,MAAM,iCAAiC,CAAC;AAC7D,OAAO,EAAE,SAAS,EAAE,MAAM,mCAAmC,CAAC;AAE9D,OAAO,EACL,iBAAiB,EACjB,gCAAgC,EAChC,gBAAgB,EAChB,iBAAiB,GAClB,MAAM,iBAAiB,CAAC;AAEzB,OAAO,EAAE,QAAQ,EAAE,MAAM,yBAAyB,CAAC"
+}
\ No newline at end of file
diff --git a/node_modules/@aztec/aztec.js/dest/index.js b/node_modules/@aztec/aztec.js/dest/index.js
index d1c7c2c..84a018f 100644
--- a/node_modules/@aztec/aztec.js/dest/index.js
+++ b/node_modules/@aztec/aztec.js/dest/index.js
@@ -17,18 +17,89 @@
  *   import { EthAddress } from '@aztec/aztec.js/eth_address';
  * ```
  */
-export { ContractFunctionInteraction, Contract, ContractBase, SentTx, BatchCall, } from './contract/index.js';
-export { ContractDeployer, DeployMethod, DeploySentTx } from './contract_deployer/index.js';
-export { generatePublicKey, computeMessageSecretHash, CheatCodes, isContractDeployed, EthCheatCodes, computeAuthWitMessageHash, } from './utils/index.js';
+export {
+  ContractFunctionInteraction,
+  Contract,
+  ContractBase,
+  SentTx,
+  BatchCall,
+} from './contract/index.js';
+export {
+  ContractDeployer,
+  DeployMethod,
+  DeploySentTx,
+} from './contract_deployer/index.js';
+export {
+  generatePublicKey,
+  computeMessageSecretHash,
+  CheatCodes,
+  isContractDeployed,
+  EthCheatCodes,
+  computeAuthWitMessageHash,
+} from './utils/index.js';
 export { createPXEClient } from './pxe_client.js';
-export { CompleteAddress, getSchnorrAccount, AccountManager, getUnsafeSchnorrAccount, EcdsaAccountContract, createAccounts, SchnorrAccountContract, SingleKeyAccountContract, createAccount, BaseAccountContract, } from './account/index.js';
-export { waitForSandbox, getSandboxAccountsWallets, deployInitialSandboxAccounts } from './sandbox/index.js';
-export { AccountWalletWithPrivateKey, AccountWallet, SignerlessWallet } from './wallet/index.js';
+export {
+  CompleteAddress,
+  getEcdsaAccount,
+  getSchnorrAccount,
+  AccountManager,
+  getUnsafeSchnorrAccount,
+  EcdsaAccountContract,
+  createAccounts,
+  SchnorrAccountContract,
+  SingleKeyAccountContract,
+  createAccount,
+  BaseAccountContract,
+} from './account/index.js';
+export {
+  waitForSandbox,
+  getSandboxAccountsWallets,
+  deployInitialSandboxAccounts,
+} from './sandbox/index.js';
+export {
+  AccountWalletWithPrivateKey,
+  AccountWallet,
+  SignerlessWallet,
+} from './wallet/index.js';
 // TODO https://github.com/AztecProtocol/aztec-packages/issues/2632 --> FunctionSelector might not need to be exposed
 // here once the issue is resolved.
-export { AztecAddress, EthAddress, Fr, Fq, FunctionSelector, GlobalVariables, GrumpkinScalar, Point, getContractDeploymentInfo, } from '@aztec/circuits.js';
+export {
+  AztecAddress,
+  EthAddress,
+  Fr,
+  Fq,
+  FunctionSelector,
+  GlobalVariables,
+  GrumpkinScalar,
+  Point,
+  getContractDeploymentInfo,
+} from '@aztec/circuits.js';
 export { Grumpkin, Schnorr } from '@aztec/circuits.js/barretenberg';
-export { AuthWitness, ContractData, ExtendedContractData, ExtendedNote, INITIAL_L2_BLOCK_NUM, L2Actor, L2Block, L2BlockL2Logs, LogId, LogType, MerkleTreeId, Note, PackedArguments, Tx, TxExecutionRequest, TxHash, TxReceipt, TxStatus, UnencryptedL2Log, createAztecNodeClient, emptyFunctionCall, merkleTreeIds, mockTx, } from '@aztec/types';
+export {
+  AuthWitness,
+  ContractData,
+  ExtendedContractData,
+  ExtendedNote,
+  INITIAL_L2_BLOCK_NUM,
+  L2Actor,
+  L2Block,
+  L2BlockL2Logs,
+  LogId,
+  LogType,
+  MerkleTreeId,
+  Note,
+  PackedArguments,
+  Tx,
+  TxExecutionRequest,
+  TxHash,
+  TxReceipt,
+  TxStatus,
+  UnencryptedL2Log,
+  createAztecNodeClient,
+  emptyFunctionCall,
+  merkleTreeIds,
+  mockTx,
+} from '@aztec/types';
 // TODO: These kinds of things have no place on our public api.
 // External devs will almost certainly have their own methods of doing these things.
 // If we want to use them in our own "aztec.js consuming code", import them from foundation as needed.
@@ -42,5 +113,5 @@ export { fileURLToPath } from '@aztec/foundation/url';
 export { to2Fields, toBigInt } from '@aztec/foundation/serialize';
 export { toBigIntBE } from '@aztec/foundation/bigint-buffer';
 export { makeFetch } from '@aztec/foundation/json-rpc/client';
-export { deployL1Contract, deployL1Contracts, } from '@aztec/ethereum';
+export { deployL1Contract, deployL1Contracts } from '@aztec/ethereum';
 //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQWtCRztBQUNILE9BQU8sRUFFTCwyQkFBMkIsRUFDM0IsUUFBUSxFQUNSLFlBQVksRUFFWixNQUFNLEVBQ04sU0FBUyxHQUNWLE1BQU0scUJBQXFCLENBQUM7QUFFN0IsT0FBTyxFQUFFLGdCQUFnQixFQUFFLFlBQVksRUFBRSxZQUFZLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUU1RixPQUFPLEVBQ0wsaUJBQWlCLEVBR2pCLHdCQUF3QixFQUN4QixVQUFVLEVBRVYsa0JBQWtCLEVBQ2xCLGFBQWEsRUFDYix5QkFBeUIsR0FDMUIsTUFBTSxrQkFBa0IsQ0FBQztBQUUxQixPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFbEQsT0FBTyxFQUNMLGVBQWUsRUFDZixpQkFBaUIsRUFFakIsY0FBYyxFQUNkLHVCQUF1QixFQUN2QixvQkFBb0IsRUFDcEIsY0FBYyxFQUNkLHNCQUFzQixFQUN0Qix3QkFBd0IsRUFDeEIsYUFBYSxFQUViLG1CQUFtQixHQUNwQixNQUFNLG9CQUFvQixDQUFDO0FBRTVCLE9BQU8sRUFBRSxjQUFjLEVBQUUseUJBQXlCLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUU3RyxPQUFPLEVBQUUsMkJBQTJCLEVBQUUsYUFBYSxFQUFVLGdCQUFnQixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFFekcscUhBQXFIO0FBQ3JILG1DQUFtQztBQUNuQyxPQUFPLEVBQ0wsWUFBWSxFQUNaLFVBQVUsRUFDVixFQUFFLEVBQ0YsRUFBRSxFQUNGLGdCQUFnQixFQUNoQixlQUFlLEVBQ2YsY0FBYyxFQUNkLEtBQUssRUFDTCx5QkFBeUIsR0FDMUIsTUFBTSxvQkFBb0IsQ0FBQztBQUU1QixPQUFPLEVBQUUsUUFBUSxFQUFFLE9BQU8sRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBRXBFLE9BQU8sRUFDTCxXQUFXLEVBRVgsWUFBWSxFQUVaLG9CQUFvQixFQUNwQixZQUFZLEVBR1osb0JBQW9CLEVBQ3BCLE9BQU8sRUFDUCxPQUFPLEVBQ1AsYUFBYSxFQUViLEtBQUssRUFDTCxPQUFPLEVBQ1AsWUFBWSxFQUVaLElBQUksRUFFSixlQUFlLEVBSWYsRUFBRSxFQUNGLGtCQUFrQixFQUNsQixNQUFNLEVBQ04sU0FBUyxFQUNULFFBQVEsRUFDUixnQkFBZ0IsRUFDaEIscUJBQXFCLEVBQ3JCLGlCQUFpQixFQUNqQixhQUFhLEVBQ2IsTUFBTSxHQUNQLE1BQU0sY0FBYyxDQUFDO0FBRXRCLCtEQUErRDtBQUMvRCxvRkFBb0Y7QUFDcEYsc0dBQXNHO0FBQ3RHLE9BQU8sRUFBc0MsZUFBZSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDNUYsT0FBTyxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUN4RCxPQUFPLEVBQWUsaUJBQWlCLEVBQUUsS0FBSyxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDOUUsT0FBTyxFQUFFLEtBQUssRUFBRSxVQUFVLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUM1RCxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDaEQsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ2xELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUN0RCxPQUFPLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQ2xFLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUM3RCxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFFOUQsT0FBTyxFQUdMLGdCQUFnQixFQUNoQixpQkFBaUIsR0FDbEIsTUFBTSxpQkFBaUIsQ0FBQyJ9
